{
    "name": "vscode-emacs-friendly",
    "displayName": "Emacs Friendly Keymap",
    "description": "Emacs keybindings and selection, friendly interaction with the system clipboard.",
    "icon": "emacs_pacifica.png",
    "version": "0.8.2",
    "publisher": "lfs",
    "homepage": "https://github.com/SebastianZaha/vscode-emacs-friendly",
    "repository": {
        "type": "git",
        "url": "https://github.com/SebastianZaha/vscode-emacs-friendly"
    },
    "bugs": "https://github.com/SebastianZaha/vscode-emacs-friendly/issues",
    "engines": {
        "vscode": "^1.11.0"
    },
    "categories": [
        "Other",
        "Keymaps"
    ],
    "keywords": [
        "emacs",
        "shortcuts",
        "keybindings",
        "behavior",
        "selection"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "keybindings": [
            {
                "key": "right",
                "command": "emacs.cursorRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+f",
                "mac": "cmd+f",
                "command": "emacs.cursorRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+f",
                "mac": "cmd+f",
                "command": "emacs.cursorRight",
                "when": "terminalFocus"
            },
            {
                "key": "left",
                "command": "emacs.cursorLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+b",
                "mac": "cmd+b",
                "command": "emacs.cursorLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "up",
                "command": "emacs.cursorUp",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "up",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "mac": "cmd+p",
                "command": "emacs.cursorUp",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "mac": "cmd+p",
                "command": "emacs.cursorUp",
                "when": "terminalFocus"
            },
            {
                "key": "ctrl+p",
                "mac": "cmd+p",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "down",
                "command": "emacs.cursorDown",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "down",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "mac": "cmd+n",
                "command": "emacs.cursorDown",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "mac": "cmd+n",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "home",
                "command": "emacs.cursorHome",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+a",
                "mac": "cmd+a",
                "command": "emacs.cursorHome",
                "when": "editorTextFocus"
            },
            {
                "key": "end",
                "command": "emacs.cursorEnd",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+e",
                "mac": "cmd+e",
                "command": "emacs.cursorEnd",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+e",
                "mac": "cmd+e",
                "command": "emacs.cursorEnd",
                "when": "terminalFocus"
            },
            {
                "key": "alt+f",
                "command": "emacs.cursorWordRight",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+b",
                "command": "emacs.cursorWordLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "pagedown",
                "command": "emacs.cursorPageDown",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "pagedown",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+v",
                "mac": "cmd+v",
                "command": "emacs.cursorPageDown",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "ctrl+v",
                "mac": "cmd+v",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "pageup",
                "command": "emacs.cursorPageUp",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "pageup",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+v",
                "command": "emacs.cursorPageUp",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "alt+v",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+shift+.",
                "command": "emacs.cursorBottom",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+shift+.",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+shift+,",
                "command": "emacs.cursorTop",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+shift+,",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+g g",
                "command": "workbench.action.gotoLine"
            },
            {
                "key": "alt+g n",
                "command": "editor.action.marker.next"
            },
            {
                "key": "alt+g p",
                "command": "editor.action.marker.prev"
            },
            {
                "key": "alt+g g",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+s",
                "mac": "cmd+s",
                "command": "actions.find",
                "when": "!findWidgetVisible"
            },
            {
                "key": "alt+shift+5",
                "command": "editor.action.startFindReplaceAction",
                "when": "editorFocus"
            },
            {
                "command": "editor.action.replaceOne",
                "key": "ctrl+enter",
                "mac": "cmd+enter",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+s",
                "mac": "cmd+s",
                "command": "editor.action.nextMatchFindAction",
                "when": "findWidgetVisible"
            },
            {
                "key": "ctrl+r",
                "mac": "cmd+r",
                "command": "actions.find",
                "when": "!findWidgetVisible"
            },
            {
                "key": "ctrl+r",
                "mac": "cmd+r",
                "command": "editor.action.previousMatchFindAction",
                "when": "findWidgetVisible"
            },
            {
                "key": "ctrl+alt+n",
                "mac": "cmd+alt+n",
                "command": "editor.action.addSelectionToNextFindMatch",
                "when": "editorFocus"
            },
            {
                "key": "ctrl+d",
                "mac": "cmd+d",
                "command": "deleteRight",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+h",
                "mac": "cmd+h",
                "command": "deleteLeft",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+d",
                "command": "deleteWordRight",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+k",
                "mac": "cmd+k",
                "command": "emacs.C-k",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+w",
                "mac": "cmd+w",
                "command": "emacs.C-w",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+w",
                "mac": "cmd+w",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+w",
                "command": "emacs.M-w",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+w",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+y",
                "mac": "cmd+y",
                "command": "emacs.C-y",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+y",
                "mac": "cmd+y",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+m",
                "mac": "cmd+m",
                "command": "emacs.C-j",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+j",
                "mac": "cmd+j",
                "command": "emacs.C-j",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+j",
                "mac": "cmd+j",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+x ctrl+o",
                "mac": "cmd+x cmd+o",
                "command": "emacs.C-x_C-o",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+x ctrl+o",
                "mac": "cmd+x cmd+o",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+x h",
                "mac": "cmd+x h",
                "command": "editor.action.selectAll",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+x h",
                "mac": "cmd+x h",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+x u",
                "mac": "cmd+x u",
                "command": "emacs.C-x_u",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+x u",
                "mac": "cmd+x u",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+x z",
                "mac": "cmd+x z",
                "command": "workbench.action.toggleZenMode"
            },
            {
                "key": "ctrl+/",
                "mac": "cmd+/",
                "command": "emacs.C-/",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+/",
                "mac": "cmd+/",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+;",
                "mac": "cmd+;",
                "command": "editor.action.commentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+;",
                "mac": "cmd+;",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+;",
                "command": "editor.action.blockComment",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+;",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+l",
                "mac": "cmd+l",
                "command": "emacs.C-l",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "emacs.C-g",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "emacs.exitMarkMode",
                "when": "editorTextFocus && editorHasSelection"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeReferenceSearchEditor",
                "when": "inReferenceSearchEditor && !config.editor.stablePeek"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeReferenceSearch",
                "when": "referenceSearchVisible && !config.editor.stablePeek"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "removeSecondaryCursors",
                "when": "editorHasMultipleSelections && editorTextFocus"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeBreakpointWidget",
                "when": "breakpointWidgetVisible && editorFocus"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "leaveSnippet",
                "when": "editorTextFocus && inSnippetMode"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeMarkersNavigation",
                "when": "editorFocus && markersNavigationVisible"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeParameterHints",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "hideSuggestWidget",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "cancelRenameInput",
                "when": "editorFocus && renameInputVisible"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeAccessibilityHelp",
                "when": "accessibilityHelpWidgetVisible && editorFocus"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "closeReplaceInFilesWidget",
                "when": "replaceInputBoxFocus && searchViewletVisible"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "workbench.action.closeMessages",
                "when": "globalMessageVisible"
            },
            {
                "key": "ctrl+g",
                "mac": "cmd+g",
                "command": "workbench.action.closeQuickOpen",
                "when": "inQuickOpen"
            },
            {
                "key": "ctrl+space",
                "mac": "cmd+space",
                "command": "emacs.enterMarkMode",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+x ctrl+f",
                "mac": "cmd+x cmd+f",
                "command": "workbench.action.quickOpen"
            },
            {
                "key": "ctrl+x ctrl+s",
                "mac": "cmd+x cmd+s",
                "command": "workbench.action.files.save",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+x ctrl+w",
                "mac": "cmd+x cmd+w",
                "command": "workbench.action.files.saveAs",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+x k",
                "mac": "cmd+x k",
                "command": "workbench.action.closeActiveEditor"
            },
            {
                "key": "ctrl+x ctrl-k",
                "mac": "cmd+x cmd-k",
                "command": "workbench.action.closeAllEditors"
            },
            {
                "key": "ctrl+x k",
                "mac": "cmd+x k",
                "command": "workbench.action.closeWindow",
                "when": "!editorIsOpen"
            },
            {
                "key": "ctrl+x ctrl+n",
                "mac": "cmd+x cmd+n",
                "command": "workbench.action.newWindow"
            },
            {
                "key": "ctrl+x 1",
                "mac": "cmd+x 1",
                "command": "workbench.action.closeEditorsInOtherGroups"
            },
            {
                "key": "ctrl+x 2",
                "mac": "cmd+x 2",
                "command": "workbench.action.splitEditor"
            },
            {
                "key": "ctrl+x 3",
                "mac": "cmd+x 3",
                "command": "workbench.action.toggleEditorGroupLayout"
            },
            {
                "key": "ctrl+x o",
                "mac": "cmd+x o",
                "command": "workbench.action.navigateEditorGroups"
            },
            {
                "key": "ctrl+p",
                "mac": "cmd+p",
                "command": "showPrevParameterHint",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+n",
                "mac": "cmd+n",
                "command": "showNextParameterHint",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+p",
                "mac": "cmd+p",
                "command": "selectPrevQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "mac": "cmd+n",
                "command": "selectNextQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "mac": "cmd+p",
                "command": "selectPrevSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "mac": "cmd+n",
                "command": "selectNextSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "mac": "cmd+p",
                "command": "workbench.action.quickOpenNavigatePrevious",
                "when": "inQuickOpen"
            },
            {
                "key": "ctrl+n",
                "mac": "cmd+n",
                "command": "workbench.action.quickOpenNavigateNext",
                "when": "inQuickOpen"
            },
            {
                "key": "ctrl+'",
                "mac": "cmd+'",
                "command": "editor.action.triggerSuggest",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+'",
                "mac": "cmd+'",
                "command": "toggleSuggestionDetails",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+shift+'",
                "mac": "cmd+shift+'",
                "command": "editor.action.triggerParameterHints",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+x",
                "command": "workbench.action.showCommands"
            },
            {
                "key": "ctrl+alt+space",
                "mac": "cmd+alt+space",
                "command": "workbench.action.toggleSidebarVisibility"
            },
            {
                "key": "ctrl+x b",
                "mac": "cmd+x b",
                "command": "workbench.action.showAllEditors"
            },
            {
                "key": "ctrl+shift+backspace",
                "mac": "cmd+shift+backspace",
                "command": "emacs.C-S_bs",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+x ctrl+l",
                "mac": "cmd+x cmd+l",
                "command": "editor.action.transformToLowercase",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+x ctrl+u",
                "mac": "cmd+x cmd+u",
                "command": "editor.action.transformToUppercase",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+backspace",
                "command": "deleteWordLeft",
                "when": "editorTextFocus && !editorReadonly"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "build": "node build.js && tsc -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "lint": "tslint -p tslint.json --type-check **/*.ts"
    },
    "devDependencies": {
        "@types/mocha": "^2.2.41",
        "@types/node": "^6.0.81",
        "mocha": "^3.4.2",
        "typescript": "^2.4.1",
        "vscode": "^1.1.4"
    },
    "dependencies": {
        "clipboardy": "^1.1.4"
    }
}
